name: üöÄ Laravel cPanel Deployment

on:
  push:
    branches: [ main, dev ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.env.example'

env:
  COMPOSER_PROCESS_TIMEOUT: 0
  COMPOSER_NO_INTERACTION: 1
  COMPOSER_NO_AUDIT: 1

jobs:

  # Production Deployment (main branch)
  production-deploy:
    if: github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'deploy')
    name: üõ°Ô∏è Production Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, pdo, tokenizer, xml
          ini-values: memory_limit=512M, max_execution_time=300
          coverage: none

      - name: üì¶ Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: üß™ Run Laravel Tests
        run: |
          cp .env.testing .env
          php artisan key:generate --env=testing
          php artisan migrate --force --env=testing
          APP_ENV=testing vendor/bin/phpunit

      - name: üõ†Ô∏è Check for Frontend
        id: check_frontend
        run: |
          if [ -f package-lock.json ]; then
            echo "has_frontend=true" >> $GITHUB_OUTPUT
          else
            echo "has_frontend=false" >> $GITHUB_OUTPUT
          fi

      - name: üèóÔ∏è Build Assets
        if: steps.check_frontend.outputs.has_frontend == 'true'
        run: |
          npm ci --silent
          npm run build --silent

      - name: üöÄ Deploy to Production Server
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT }}
          protocol: ftp
          security: loose
          local-dir: ./
          server-dir: ${{ secrets.FTP_REMOTE_DIR || '/' }}
          log-level: verbose
          dangerous-clean-slate: false
          exclude: |
            **/.git/**
            **/.github/**
            **/.idea/**
            **/node_modules/**
            **/vendor/**
            **/storage/**
            **/tests/**
            **/bootstrap/cache/**
            .env*
            docker-compose*
            vite.config.js
            webpack.mix.js
            package*.json
            composer.*
            phpunit.xml
            artisan
            README.md

      - name: ‚úÖ Done
        run: echo "‚úÖ Production deployment complete at $(date)"


  # Development Deployment (dev branch)
  development-deploy:
    if: github.ref == 'refs/heads/dev' && contains(github.event.head_commit.message, 'deploy')
    name: ‚öôÔ∏è Development Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, pdo, tokenizer, xml
          ini-values: memory_limit=512M, max_execution_time=300
          coverage: none

      - name: üì¶ Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      - name: üß™ Run Laravel Tests
        run: |
          cp .env.testing .env
          php artisan key:generate --env=testing
          php artisan migrate --force --env=testing
          APP_ENV=testing vendor/bin/phpunit

      - name: üõ†Ô∏è Check for Frontend
        id: check_frontend
        run: |
          if [ -f package-lock.json ]; then
            echo "has_frontend=true" >> $GITHUB_OUTPUT
          else
            echo "has_frontend=false" >> $GITHUB_OUTPUT
          fi

      - name: üèóÔ∏è Build Assets
        if: steps.check_frontend.outputs.has_frontend == 'true'
        run: |
          npm ci --silent
          npm run build --silent

      - name: üöÄ Deploy to Dev Server
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ secrets.DEV_FTP_HOST }}
          username: ${{ secrets.DEV_FTP_USERNAME }}
          password: ${{ secrets.DEV_FTP_PASSWORD }}
          port: 21
          protocol: ftp
          security: loose
          local-dir: ./
          server-dir: ${{ secrets.FTP_DEV_REMOTE_DIR || '/' }}
          log-level: verbose
          dangerous-clean-slate: false
          exclude: |
            **/.git/**
            **/.github/**
            **/.idea/**
            **/node_modules/**
            **/vendor/**
            **/storage/**
            **/tests/**
            **/bootstrap/cache/**
            .env*
            docker-compose*
            vite.config.js
            webpack.mix.js
            package*.json
            composer.*
            phpunit.xml
            artisan
            README.md

      - name: ‚úÖ Done
        run: echo "‚úÖ Development deployment complete at $(date)"
