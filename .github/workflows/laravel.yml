name: üöÄ Laravel cPanel Deployment (Stable)

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.env.example'

jobs:
  deploy:
    if: contains(github.event.head_commit.message, 'deploy')
    name: üõ°Ô∏è Stable Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # 1. Checkout code
      - name: üõ†Ô∏è Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup PHP environment
      - name: üêò Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, pdo, tokenizer, xml
          ini-values: memory_limit=512M, max_execution_time=300
          coverage: none

      # 3. Install Composer dependencies (with dev for tests)
      - name: üì¶ Install Composer dependencies
        run: composer install --no-interaction --prefer-dist

      # 4. Setup environment and run tests
      - name: üß™ Run Laravel Tests
        run: |
          cp .env.testing .env
          php artisan key:generate --env=testing
          php artisan migrate --force --env=testing
          APP_ENV=testing vendor/bin/phpunit

      # 5. Check for frontend build (optional)
      - name: üõ†Ô∏è Check for Frontend
        id: check_frontend
        run: |
          if [ -f package-lock.json ]; then
            echo "has_frontend=true" >> $GITHUB_OUTPUT
          else
            echo "has_frontend=false" >> $GITHUB_OUTPUT
          fi

      - name: üèóÔ∏è Build Assets
        if: steps.check_frontend.outputs.has_frontend == 'true'
        run: |
          npm ci --silent
          npm run build --silent

      # 6. Deploy to cPanel using FTP
      - name: üöÄ Deploy to Server
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          port: ${{ secrets.FTP_PORT || '21' }}
          protocol: ftp  # Use plain FTP instead of FTPS
          security: loose
          local-dir: ./
          server-dir: ${{ secrets.FTP_REMOTE_DIR || '/' }}
          log-level: verbose
          dangerous-clean-slate: false
          exclude: |
            .git/
            .github/
            .idea/
            node_modules/
            vendor/
            storage/
            tests/
            bootstrap/cache/
            .env*
            docker-compose*
            vite.config.js
            webpack.mix.js
            package*.json
            composer.*
            phpunit.xml
            artisan
            README.md
      


      # 7. Post-deployment message
      - name: ‚úÖ Done
        run: |
          echo "üéâ Deployment complete at $(date)"
          echo "Triggered by: $GITHUB_SHA"
